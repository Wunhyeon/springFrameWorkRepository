<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd">
						
	<bean id="xml1" class="kr.co.jaehyeon.beans.TestBean1"></bean>
	<bean id="xml2" class="kr.co.jaehyeon.beans.TestBean2" lazy-init="true"></bean>
	<!-- lazy-init="true"를 넣어주게 되면 xml을 로딩할 때 객체 생성하는 것이 아니라, getBean()메서드를 호출할 때
	객체가 생성이 된다. 그리고 singleTon이기 때문에 이 아이디를 가지고 getBean()메소드를 호출할 때마다
	객체를 생성하는 것이 아니라 getBean()메소드를 최초로 호출할 때 객체가 생성이 됨. 그리고 그 다음부터는 계속 같은 주소값을
	사용하게 된다.
	 -->
	 <bean id="xml3" class="kr.co.jaehyeon.beans.TestBean3" scope="prototype"></bean>
	 <!-- scope="prototype"을 넣어주게 되면 xml을 로딩할 때 객체생성 되지 않고, getBean()할 때 마다 새로운 객체를 생성해서 
	 전달을 하게 된다. -->
	 
	 
	<!-- 자바파일에서 bean객체의 주소값을 가져올 때, id를 가지고 주소값을 가지고 왔었다. 근데 사실 이 id는 xml상에 등록되있는 bean들 중에서
	똑같은 클래스의 타입의 bean이 여러개가 있을 때 id를 쓰면 된다.
	만약에 xml파일 안에 같은 클래스 타입의 bean이 딱 하나만 정의되어 있다고 한다면, 사실 id가 필요가 없다. -->
	<bean class="kr.co.jaehyeon.beans.TestBean4"></bean>
	<!-- id속성을 가지고 bean객체를 가져오는 게 아니라 class타입을 가지고 bean객체를 가지고 왔을 경우에, bean이 2개 이상 설정되어 있다고 한다면,
	원하는 bean에다가 primary = "true"를 주면 된다.
	이렇게 하면 id가 아닌 클래스타입을 가지고 bean객체를 가지고 나올 때, 똑같은 클래스 타입이 여러개가 정의되어 있다고 한다면 primary에 true값이
	설정되어 있는 객체의 주소값을 가지고 오게 된다. -->
	<bean class="kr.co.jaehyeon.beans.TestBean4" primary="true"></bean>
</beans>